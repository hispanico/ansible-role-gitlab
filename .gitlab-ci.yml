---

variables:
  LXD_DIR: "/var/snap/lxd/common/lxd/"
  project: '$CI_PROJECT_NAME'
  lxc: 'job$CI_JOB_ID'

before_script:
  # Create ansible.cfg with correct roles_path
  - printf '[defaults]\nroles_path=../' > ansible.cfg

  # Create .lxdock.yml
  - |
    echo """
    name: $project

    containers:
      - name: $lxc
        image: ubuntu/xenial
        hostnames:
          - $lxc

    provisioning:
      - type: ansible
        playbook: tests/gitlab-ci.yml
    """ > .lxdock.yml

  - cat .lxdock.yml

AnsibleRoleCheck:
  script:
    # Basic role syntax check
    - ansible-playbook tests/gitlab-ci.yml --syntax-check

    # Deploy lxdock project and run the role/playbook
    - lxdock up

    # Run the role/playbook again, checking to make sure it's idempotent
    - >
      lxdock provision
      | grep -q 'changed=0.*failed=0'
      && (echo 'Idempotence test: pass' && exit 0)
      || (echo 'Idempotence test: fail' && exit 1)

    # Check for role is done
    - lxdock shell $lxc -c cat /etc/gitlab/gitlab.rb
    - lxdock shell $lxc -c gitlab-ctl status
    - lxdock shell $lxc -c crontab -l
    - >
      lxdock shell $lxc -c curl --insecure -s --head https://localhost/users/password/new
      | sed -n '1p' | grep -q '200'
      && (echo 'Status code 200 test: pass' && exit 0)
      || (echo 'Status code 200 test: fail' && exit 1)

after_script:
  - lxdock destroy -f
